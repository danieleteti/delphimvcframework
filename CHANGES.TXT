21/08/2017
- Unit tests migrated from DUnit to DUnitX

11/07/2017
- Added LiveValidityWindowsInSeconds in the JWT middleware.

02/10/2016
- Added LoadViewFragment. The view fragment is appended to the ResponseStream verbatim. No processing happens.
  procedure LoadViewFragment(const ViewFragment: string);

29/09/2016
- Added RenderWrappedList to render heterogeneous lists
- Added ObjectsMappers support for heterogeneous lists
- Unit Names refactoring

19/09/2016
- IDE Expert: Load optimized configuration for the default generated project (MaxConnections and ListenQueue)
- small optimization for body reading in the TWebContext
- add sample for CustomAuth

16/09/2016
- added Custom Authentication and Authorization Middleware

06/09/2016
- Restored support for Delphi Version with no inline array support
- The default logger is now LoggerPro
- Now you can define a custom appender for the logger
- Added new sample "CustomLoggerSample.dproj"
- Deprecated all the old logger methods; change your code ASAP.

05/09/2016
- IDE Expert can generate CORS enabled servers
- added "_" in the allowed characters for parameters names

28/06/2016
- added method TWebContext.SessionStarted (check sample Sessions to see how it works)
- added method TWebContext.SessionID
- added unit test for TWebContext.SessionStarted

27/06/2016
- updated IDE Expert to generate parameterless actions

23/06/2016
- completed jwt middleware (check jwtmiddleware sample to know how to use)
- added "HasError" and "Error" properties to the IRESTResponse (thank you Mathias Pannier)
- added "Context.Request.QueryStringParams: TStrings"

22/06/2016
- Added strongly typed actions
- TWebContext param in the actions is optional
- In caso of "action not found", the server dont returns NEVER the document index
- Refactoring
- More unit tests
- BasicDemo updated
- articles_crud.dproj updated to user typed action

15/03/2015
- all the built-in methods have been moved under the /system controller
- messaging system is ready to test. It now uses RabbitMQ
- authentication/authorization architecture
- basic authentication is builtin
- new method for middleware: OnBeforeControllerAction
- new configuration block in TMVCEngine.Create (now is the preferred way to configure the server)
- Declared in MVCFramework.Commons the record HTTP_STATUS which defines all the HTTP/1.1 status code. 

31/03/2015
- messaging system now supports queues and topics
- some minor bug fixes in the objectsmappers
- added new build system based on a python script
- added more unit tests


- added support for JWT
- added auth middleware based on JWT
